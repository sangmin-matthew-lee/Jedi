[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Matthew.L\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Matthew.L\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 9.0.4)
[debug]       Load.loadUnit: plugins took 71.2561ms
[debug]       Load.loadUnit: defsScala took 0.23ms
[debug] [Loading] Scanning directory C:\Users\Matthew.L\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Matthew.L\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.5473 ms
[debug]           Load.resolveProject(global-plugins) took 38.4609ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Matthew.L\.sbt\1.0\plugins, plugins: List(<none>))) took 82.0065ms
[debug] [Loading] Done in C:\Users\Matthew.L\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 97.4049ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1964ms
[debug]     Load.loadUnit(file:/C:/Users/Matthew.L/.sbt/1.0/plugins/, ...) took 174.4117ms
[debug]   Load.apply: load took 288.0447ms
[debug]   Load.apply: resolveProjects took 4.7041ms
[debug]   Load.apply: finalTransforms took 43.9055ms
[debug]   Load.apply: config.delegates took 5.651ms
[debug]   Load.apply: Def.make(settings)... took 326.1208ms
[debug]   Load.apply: structureIndex took 69.0062ms
[debug]   Load.apply: mkStreams took 1.5036ms
[info] loading global plugins from C:\Users\Matthew.L\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2790.2441ms
[debug]           Load.loadUnit: plugins took 15.6153ms
[debug]           Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\Matthew.L\study\jedi\project
[debug]             Load.loadUnit: mkEval took 5.5197ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Matthew.L\study\jedi\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2148 ms
[info] loading settings for project jedi-build from idea.sbt ...
[debug]               Load.resolveProject(jedi-build) took 6.8384ms
[debug]             Load.loadTransitive: finalizeProject(Project(id jedi-build, base: C:\Users\Matthew.L\study\jedi\project, plugins: List(<none>))) took 8.4126ms
[debug] [Loading] Done in C:\Users\Matthew.L\study\jedi\project, returning: (jedi-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1522.712ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.7118ms
[debug]         Load.loadUnit(file:/C:/Users/Matthew.L/study/jedi/project/, ...) took 1542.6973ms
[debug]       Load.apply: load took 1543.6931ms
[debug]       Load.apply: resolveProjects took 0.1075ms
[debug]       Load.apply: finalTransforms took 6.1123ms
[debug]       Load.apply: config.delegates took 0.2762ms
[debug]       Load.apply: Def.make(settings)... took 52.154ms
[debug]       Load.apply: structureIndex took 19.3847ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from C:\Users\Matthew.L\study\jedi\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2193.9916ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\Matthew.L\study\jedi
[debug]       Load.loadUnit: mkEval took 0.1657ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Matthew.L\study\jedi, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.1055 ms
[info] loading settings for project jedi from build.sbt ...
[debug]         Load.resolveProject(jedi) took 21.399ms
[debug]       Load.loadTransitive: finalizeProject(Project(id jedi, base: C:\Users\Matthew.L\study\jedi, plugins: List(<none>))) took 23.316ms
[debug] [Loading] Done in C:\Users\Matthew.L\study\jedi, returning: (jedi)
[debug]     Load.loadUnit: loadedProjectsRaw took 532.3305ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.0534ms
[debug]   Load.loadUnit(file:/C:/Users/Matthew.L/study/jedi/, ...) took 2732.0427ms
[debug] Load.apply: load took 2733.0891ms
[debug] Load.apply: resolveProjects took 0.1035ms
[debug] Load.apply: finalTransforms took 18.6216ms
[debug] Load.apply: config.delegates took 0.1922ms
[debug] Load.apply: Def.make(settings)... took 72.8038ms
[debug] Load.apply: structureIndex took 19.4803ms
[debug] Load.apply: mkStreams took 0.0072ms
[info] set current project to jedi (in build file:/C:/Users/Matthew.L/study/jedi/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62338 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62338, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to jedi (in build file:/C:/Users/Matthew.L/study/jedi/)
[debug] > Exec(idea-shell, None, None)
